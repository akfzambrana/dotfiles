[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[alias]
  st = status
  ci = commit
  br = branch -a
  co = checkout
  lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  up = !sh -c \"git fetch -p && git rebase origin/$(git symbolic-ref HEAD | sed -e 's,.*/\\(.*\\),\\1,')\"
  ft = fetch -p
  remove-local-tags = !git tag -l | xargs git tag -d && git fetch -t

[pull]
  ff = yes

[push]
  default = current

[merge]
  # tool = meld
  tool = vscode
  commit = no
  ff = no

[mergetool]
  # don't ask if we want to skip merge
  prompt = false

  # don't create backup *.orig files
  keepBackup = false

[mergetool "vscode"]
  cmd = code --wait $MERGED

# [mergetool "meld"]
  # linux
  # cmd = meld --auto-merge \"$LOCAL\" \"$BASE\" \"$REMOTE\" --output \"$MERGED\" --label \"MERGE (REMOTE BASE MY)\"
  # trustExitCode = false

  # mac
  # cmd = open -W -a Meld --args --auto-merge \"$LOCAL\" \"$BASE\" \"$REMOTE\" --output \"$MERGED\" --label \"MERGE (REMOTE BASE MY)\"
  # trustExitCode = true


[diff]
  tool = vscode

[difftool "vscode"]
  cmd = code --wait --diff

[core]
  editor = code --wait
  # editor = vim
